name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Instalar dependências
        run: npm ci
        
      # Playwright precisa do Chromium e suas dependências no ambiente do CI
      - name: Instalar Playwright e navegadores
        run: npx playwright install --with-deps chromium
        
      - name: Build extensão (cria dist/ e dist/extension.zip)
        run: npm run build
        
      - name: Testes E2E com Playwright
        # O '|| true' ou '|| npm run test:e2e -- --reporter=html' garante que os passos seguintes rodem
        # mesmo se os testes falharem (para publicar o relatório)
        run: npm run test:e2e || true 
        
      - name: Publicar relatório HTML do Playwright
        # Roda sempre, mesmo se o passo anterior falhar (por causa do 'if: always()')
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          
      - name: Publicar pacote da extensão (.zip)
        uses: actions/upload-artifact@v4
        with:
          name: extension-zip
          path: dist/extension.zip
          
      # Opcional: Criar Release no GitHub
      - name: Obter Versão
        id: get_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        
      - name: Criar Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: Nova versão da extensão gerada pelo CI/CD.
          files: dist/extension.zip